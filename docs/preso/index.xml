<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Presos on Datadog Training Site</title>
    <link>https://datadog.github.io/summit-training-session/preso/</link>
    <description>Recent content in Presos on Datadog Training Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 17 Oct 2016 08:46:22 -0400</lastBuildDate>
    
	<atom:link href="https://datadog.github.io/summit-training-session/preso/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Datadog 101 - Monitoring 101</title>
      <link>https://datadog.github.io/summit-training-session/preso/monitoring101/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://datadog.github.io/summit-training-session/preso/monitoring101/</guid>
      <description># Monitoring 101 Note: This is a speaker note --- --- --- # Collecting data is cheap --- # Collecting data is cheap # **Not having it when you need it is expensive** --- --- ![](../../images/monitoring101/workresourceevents-1.png)--- ![](../../images/monitoring101/workresourceevents-2.png)--- ![](../../images/monitoring101/workresourceevents-3.png)--- ![](../../images/monitoring101/workresourceevents-4.png)--- ![](../../images/monitoring101/workresourceevents-4.png)**Work - Throughput**: The server does something. How many of those things did it do? --- ![](../../images/monitoring101/workresourceevents-4.png)**Work - Performance**: The server does something. How long does it take to do those things?</description>
    </item>
    
    <item>
      <title>Datadog 101 - Building Great Dashboards</title>
      <link>https://datadog.github.io/summit-training-session/preso/buildinggreatdashboards/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://datadog.github.io/summit-training-session/preso/buildinggreatdashboards/</guid>
      <description># Building Great Dashboards --- # Two Types Of Dashboards ![](../../images/buildinggreatdashboards/2dashboards.png)--- # Two Sets of Widgets ###Timeboards ![](../../images/buildinggreatdashboards/timeboardwidgets.png)###Screenboards ![](../../images/buildinggreatdashboards/screenboardwidgets.png)--- # Two Different Goals ![](../../images/buildinggreatdashboards/dashboards.png)--- #ElasticSearch Metrics ![](../../images/buildinggreatdashboards/elasticsearch-alerts-final2.png)--- #ElasticSearch Metrics | Metric | Description| |------|--------| | elasticsearch.active_primary_shards
(gauge) | The number of active primary shards in the cluster.
shown as shard | | elasticsearch.active_shards
(gauge) | The number of active shards in the cluster.
shown as shard | | elasticsearch.breakers.fielddata.estimated_size_in_bytes
(gauge) | The estimated size in bytes of the field data circuit breaker.</description>
    </item>
    
    <item>
      <title>Datadog 101 - Monitoring Math</title>
      <link>https://datadog.github.io/summit-training-session/preso/monitoringmath/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://datadog.github.io/summit-training-session/preso/monitoringmath/</guid>
      <description># Monitoring Math Getting more out of your graphs --- #Metric Aggregation --- # Timeseries Data * Metrics are stored as timeseries based on combinations of the metric name and tag combinations * Queries require an aggregation function (sum, min, max, avg) to aggregate over timeseries matching the query * Aggregation is applied at each point on the graph, bringing multiple timeseries value into one point on the graph --- # Aggregation Example * Start with a basic query â€œsum:system.</description>
    </item>
    
    <item>
      <title>Datadog 101 - The Right Alerts</title>
      <link>https://datadog.github.io/summit-training-session/preso/therightalerts/</link>
      <pubDate>Mon, 17 Oct 2016 08:46:22 -0400</pubDate>
      
      <guid>https://datadog.github.io/summit-training-session/preso/therightalerts/</guid>
      <description># Creating the Right Alerts --- # Two Rules for Effective Alerting 1. Alert liberally; page judiciously 1. Page on symptoms, rather than causes -- # What does that mean? * Create lots of alerts for everything. * Alerts become the living history of your infrastructure * But only notify people about the **Work Metrics** going awry --- # Paged Alerts Should Always Be Easily Actionable ## Alerts should be: * Grokkable at 3AM, drunk, with one eye closed * Filled with all the info you need * Including who to wake up if you have trouble * Consumable by the non-experts --- # Levels of Alerting Urgency ## Alerts as Records (low severity) Use to document the system.</description>
    </item>
    
    <item>
      <title>Monitoring Docker</title>
      <link>https://datadog.github.io/summit-training-session/preso/monitordocker/</link>
      <pubDate>Mon, 17 Oct 2016 08:47:14 -0400</pubDate>
      
      <guid>https://datadog.github.io/summit-training-session/preso/monitordocker/</guid>
      <description># Monitoring Docker --- # General Docker Workflow 1. Start Datadog container on host 1. Start application containers 1. Edit config files on Datadog container and restart container --- # Docker commands docker run ... docker ps docker logs ... docker stop ... docker rm ... docker network ...  --- # Understanding the Datadog Agent Docker command docker run -d --name dd-agent \ -v /var/run/docker.sock: /var/run/docker.sock:ro \ -v /proc/:/host/proc/:ro \ -v /sys/fs/cgroup/:/host/sys/fs/cgroup:ro \ -e API_KEY=[api_key] \ datadog/docker-dd-agent:latest  --- # Understanding the Datadog Agent Docker command docker run -d --name dd-agent \ -v /var/run/docker.</description>
    </item>
    
  </channel>
</rss>